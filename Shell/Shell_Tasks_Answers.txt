PIPES FROM GITHUB EXERCISES:
- 03-a-0200 - cat /etc/passwd | sort -k 3 -t ':'
- 03-a-0201 - cat /etc/passwd | sort -n -k 3 -t ':'
- 03-a-0210 - cat /etc/passwd | cut -f 1,5 -d ':' or awk -F ':' '{print $1 ":" $5}' /etc/passwd
- 03-a-0211 - cat /etc/passwd | cut -c 2-6
- 03-a-0212 - cat /etc/passwd | cut -f 1,6 -d ':'| tr ':' ' '
- 03-a-0213 - cat /etc/passwd | cut -f 2 -d '/'
- 03-a-1500 - wc -c(bytes) or -m(chars) or -l(newlines) /etc/passwd | cut -f 1 -d ' '
- 03-a-2000 - head /etc/passwd -n 12
		- head /etc/passwd -c 26
		- head /etc/passwd -n -4
		- tail /etc/passwd -n 17
		- head /etc/passwd -n 151 | tail -n 1
		- head /etc/passwd -n 13 | tail -n 1 | tail -c 5
- 03-a-3000 - tail -n -6 initCommand | sort -n -k 2 or tail -n +2 initCommand | sort -n -k 2
- 03-a-3100 - cat /etc/passwd | cut -f 1 -d ':' > users
- 03-a-3500 - cat /etc/passwd | cut -f 1 -d ':' | tr a-z A_Z  > users
- 03-a-5001 -  cat /etc/passwd | cut -f 7 -d ':' | grep -v '/bin/bash'| wc -l
- 03-a-5002 - cat /etc/passwd | cut -f 5 -d ':' | cut -f 2 -d ' ' | cut -f 1 -d ',' | grep -E '.{7,}$'
- 03-a-5003? - cat /etc/passwd | cut -f 5 -d ':' | cut -f 2 -d ' ' | cut -f 1 -d ',' | grep -v -E '.{8,}' | grep -E '[^a-zA-Z]'
- 03-a-5004? - cat /etc/passwd | cut -d ':' -f5 | cut -d ',' -f1 | cut -d ' ' -f2 | grep -v -E '.{8,}$' | grep -E '[^a-zA-Z]' | sort | uniq | xargs -I{} grep -w {} /etc/passwd 
- 03-a-6000 - awk 'END{print NR}' emp.data or awk 'BEGIN{i=0} {i++} END{print i}' emp.data
		- awk 'NR==3 {print}' emp.data
		- awk 'END{print $NF}' emp.data
		- awk 'NF > 4 {print}' emp.data
		- awk '$NF > 4 {print}' emp.data
		- awk '{print NF}' emp.data
		- awk 'BEGIN {i = 0} /Beth/ {i += 1} END {print i}' emp.data
		- awk 'BEGIN {max = 0; line = " "} {if ($3 > max) {max = $3; line = $0}} END{print max " " line}' emp.data
		-  awk 'NF > 2 {print}' emp.data
		- awk 'length($0) > 17' emp.data
		- awk '{print NF " " $0}' emp.data
		- awk '{print $2 "\t" $1}' data/emp.data
		-  awk '{temp = $1; $1 = $2; $2 = temp} {print $1 " " $2}' emp.data
		- awk '{{ $1 = NR; } print}' emp.data
		- awk '{$2 = "\t"; print $0}' emp.data
		- awk 'BEGIN{sum = 0} {sum = $2 + $3} {print sum}' emp.data
		- awk 'BEGIN {sum = 0} {sum += $2 + $3} END {print sum}' emp.data
- 03-b-0300 - awk -F ':' 'BEGIN {groupId = 0} {if($1 == "s0600290") {groupId = $4}} END{print groupId}' /etc/passwd
		- grep $(id -u) /etc/passwd | cut -d ':' -f4
- 03-b-3400 - cat /etc/services | awk 'BEGIN{count=0} {for(i=1;i <= length($0); i++)
	{if(substr($0, i, 1) == "#"){count++}{ break}}} END{print count}'

COMMANDS FROM THE PROBLEM SET:
2017-IN-01 - find -user $(id -u) 2>/dev/null | wc -l
!2017-IN-02 - 1) find ./ -type f -size 0 -delete; 2) find ~ -type f -exec du -a {} \; | sort -n -r | head -n 5,
but can be added: find ~ -type f -exec du -a {} \; | sort -n -r | head -n 5 | cut -f2 | xargs rm for output styling

2018-SE-01 - find ~ -type d | xargs -I{} chmod 755 {}
			- find ~ -type d | xargs chmod 755 (alternative solution)
			- find ~ -type d -exec chmod 755 {} + (alternative solution)

2020-SE-01 - find ~ -type f -perm 644/755 -exec chmod g=rw {} +
		- find ~ -type f -perm 644/755 | xargs -I{} chmod g+w {}
		- find ~ -type f -perm 644/755 | xargs chmod g+w

2022-CE-01 -  find ~ -maxdepth 1 -type f -user $(whoami) -exec chmod 664/775 {} \;
		- find ~ -maxdepth 1 -type f -user $(id -u) -exec chmod 664/775 {} \;
		- find ~ -maxdepth 1 -type f -user $(whoami) | xargs -I{} chmod 664/775 {} >/dev/null (the given solution)

2023-CE-01 -  find / ~ -type f -user $(whoami) -name "*.blend[0-9]" 2>/dev/null
		- find / ~ -type f -user $(whoami) -regex '.*\.blend[0-9]$' 2>/dev/null

2016-SE-01 - cat philip-j-fry.txt | grep -e (we can miss the -e) '^[^a-w]*[2468][^a-w]*$' | wc -l OR
		grep -v '[a-w]' philip-j-fry.txt  | grep '[02468]' | wc -l OR
		grep -v '[a-w]' philip-j-fry.txt | grep -c '[02468]'

2017-IN-03 - 

2017-SE-01 - find . -type f | xargs stat -c "%h %n" | sort -k1 -n -r | head -n 5 | awk '{print $2}' or
		find . -type f | xargs -I{} stat -c "%h %n" {} | sort -k1nr | head -n 5 | awk '{print $2}' or
		find . -type f -printf +'%n %p\n' | sort -k1nr | head -n 5 | cut -d ' ' -f 2
 
2018-SE-02 -  find /home/pesho -type f -iname '* *' -printf "%p:%T@:%i" | sort -k2 -n -r -t ' ' | head -n 1 | cut -d ':' -f3

2018-SE-03 - cat /etc/passwd | awk -F ':' '{split($1, a, "s"); split($5, b, ","); print a[2], b[1], $6}' | sort -n | awk '{print $2, $3 ": " $4}'
	-  /etc/passwd | awk -F ':' '{print $5 " " $6}' | tr ',' ' ' | awk '{print $1 " " $2 ":" $3}' (its the solution, but it doen't work as expected)

2019-SE-01 - cat planets.txt | tail -n +2 | sort -k3nr -t ';' | head -n1 | awk -F ';' '{print $2}' 
| xargs -I{} awk -F ';' '{if ($2=="{}") print $0}' planets.txt | sort -k3n -t ';' | head -n1 
| awk -F ';' '{print $1 "\t" $4}' or (the script in scripts/2019-SE-01.sh)

2019-SE-03 -  echo "$(find -type f -inum "$(find -type f | xargs stat --format '%Y %i' | sort -n | tail -n 1 
| awk '{print $2}')" | xargs stat --format '%i %n')" | awk -F '/' '{print NF-1}' | head -n 1

2020-SE-02 -  tail -n +2 spacex.txt | sort -n -k1 -r -t '|' | awk -F '|' -v var=
$(cat spacex.txt | awk -F '|' '{if($3 == "Failure") print $2}' 
| sort | uniq -c | sort -nr | head -n 1 | awk '{print $2}') '{if($2==var)print $3 ":" $4}' | head -n1

